#!/usr/bin/env bash
# Cleanup, version 3

#  Warning:
#  -------
#  This script uses quite a number of features that will be explained
#+ later on.
#  By the time you've finished the first half of the book,
#+ there should be nothing mysterious about it.
#
function require() {
hash "$@" | exit 127;
}
require mv tail dirname readlink basename 
MY_DIR="$(dirname "$(readlink -f "$0")")"
# shellcheck disable=SC1091
source "${MY_DIR}/debug.sh"
# shellcheck disable=SC2034
DEBUG=false
# shellcheck disable=SC1091
source "${MY_DIR}/debugon.sh"
LOG_DIR="${PREFIX}/var/log"
# Only users with $UID 0 have root privileges.
ROOT_UID=0    
# Default number of lines saved.
LINES=50       
# Can't change directory?
E_XCD=86       
# Non-root exit error.
E_NOTROOT=87   

# Run as root, of course.
if [ "$UID" -ne "$ROOT_UID" ]
then
  echo "Must be root to run this script."
  exit "$E_NOTROOT"
fi  

# Non-numerical argument (bad argument format).
E_WRONGARGS=85  

case "$1" in
""      ) 
  lines=50
  ;;
*[!0-9]*) 
  echo "Usage: $(basename "$0") lines-to-cleanup";
  exit "$E_WRONGARGS"
  ;;
*       ) 
  lines="$1"
  ;;
esac

cd "$LOG_DIR" || {
  echo "Cannot change to necessary directory." >&2
  exit "$E_XCD";
}

# Save last section of pacman log file.
tail -n "$lines" pacman.log > pacman.temp
# Rename it as log file.
mv pacman.temp pacman.log               

#  ': > wtmp' and '> wtmp' have the same effect.
cat /dev/null > wtmp  
echo "Log files cleaned up."
# shellcheck disable=SC1091
source "${MY_DIR}/debugoff.sh"
exit 0
