#!/usr/bin/env bash
######################################################################
# @author      : Linus Fernandes (linusfernandes@gmail.com)
# @file        : gitpush
# @created     : Thursday April 30, 2021 11:21:57 IST
# @copyright   : Copyright (c) Linus Fernandes
# @description :
######################################################################
require() {
	hash "$@" || exit
}
require git cut grep xargs
RED="\033[0;31m"
NC="\033[0m" # No Color

function message() {
	ret=$?
	if [ "$ret" -eq 0 ]; then
		echo "exit $ret from last command: $command"
	else
		echo "${RED}exit $ret from last command: $command${NC}"
		echo "${RED}returning to branch development"
		git checkout development
	fi
	exit "$ret"
}

function branchName() {
	echo "$1" | cut -d "/" -f1 --complement --output-delimiter="/"
}

export -f branchName

function delUnmerged() {
	if [[ "$2" == 0 ]]; then
		git branch -r --no-merged "$1" |
			grep -v "$1" |
			xargs -I{} bash -c "branchName {}" |
			xargs git push origin --delete
	else
		git branch -r --no-merged "$1" |
			grep -v "$1" |
			xargs -I{} bash -c "branchName {}" |
			xargs git push origin --delete --dry-run
	fi
}
export -f delUnmerged

mainBranch="main"
set -e
command=""
trap message EXIT

# prune local branches
command="git fetch -p"
eval "$command"
command="git branch -r --merged $mainBranch"

for var in $(eval "$command"); do
	if [[ "$var" == *"development"* ]] ||
		[[ "$var" == *"$mainBranch"* ]] ||
		[[ "$var" == *"HEAD"* ]] ||
		[[ "$var" == *"->"* ]]; then
		continue
	else
		echo "Delete branch $var (y/n)?"
		read -r answer
		if [ "$answer" = 'Y' ] || [ "$answer" = 'y' ]; then
			git push origin --delete "$(branchName "$var")"
		fi
	fi
done

command="delUnmerged $mainBranch 1"

if eval "$command"; then
	command="echo 'About to delete all unmerged branches. Are you sure (y/n)?'"
	eval "$command"
	command="read var"
	eval "$command"
	if [ "$var" = 'Y' ] || [ "$var" = 'y' ]; then
		command="delUnmerged $mainBranch 0"
		eval "$command"
	fi
fi
